C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE OEM_LED
OBJECT MODULE PLACED IN Code\OEM\OEM_LED.OBJ
COMPILER INVOKED BY: C:\Program Files\KeilC\C51\BIN\C51.exe Code\OEM\OEM_LED.C LA WL(1) CD OT(9,SIZE) NOAREGS OR INCDIR(
                    -.\Code\CORE\INCLUDE\;.\Code\OEM\INCLUDE\;.\Code\CHIP\INCLUDE\;.\Code\API\INCLUDE\)

line level    source

   1          /*-----------------------------------------------------------------------------
   2           * TITLE: OEM_LED.C
   3           *
   4           * Copyright (c) 1983-2007, Insyde Software Corporation. All Rights Reserved.
   5           *
   6           * You may not reproduce, distribute, publish, display, perform, modify, adapt,
   7           * transmit, broadcast, present, recite, release, license or otherwise exploit
   8           * any part of this publication in any form, by any means, without the prior
   9           * written permission of Insyde Software Corporation.
  10           *---------------------------------------------------------------------------*/
  11          
  12          #include <CORE_INCLUDE.H>
  13          #include <OEM_INCLUDE.H>
  14          
  15          /* ----------------------------------------------------------------------------
  16           * FUNCTION:   OEM_Write_Leds
  17           *
  18           * Write to SCROLL LOCK, NUM LOCK, CAPS LOCK, and any custom LEDs (including
  19           * an "Fn" key LED).
  20           *
  21           * Input: data (LED_ON bit) = Data to write to the LEDs
  22           *         bit 0 - SCROLL, Scroll Lock
  23           *         bit 1 - NUM,    Num Lock
  24           *         bit 2 - CAPS,   Caps Lock
  25           *         bit 3 - OVL,    Fn LED
  26           *         bit 4 - LED4,   Undefined
  27           *         bit 5 - LED5,   Undefined
  28           *         bit 6 - LED6,   Undefined
  29           *         bit 7 - LED7,   Undefined
  30           *
  31           * Updates Led_Data variable and calls send_leds if appropriate.
  32           * ------------------------------------------------------------------------- */
  33          void OEM_Write_Leds(BYTE data_byte)
  34          {
  35   1          Led_Data = data_byte;
  36   1          if ( data_byte & BIT1 )
  37   1          {
  38   2                      Hook_NUMLED_ON();
  39   2          }
  40   1              else
  41   1              {
  42   2                      Hook_NUMLED_OFF();
  43   2              }
  44   1              
  45   1          if ( data_byte & BIT2 )
  46   1          {
  47   2                      Hook_CAPLED_ON();
  48   2          }
  49   1              else
  50   1              {
  51   2                      Hook_CAPLED_OFF();
  52   2              }
  53   1      }
  54          
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 2   

  55          //-----------------------------------------------------------------
  56          // LED pattern
  57          //-----------------------------------------------------------------
  58          //#define  BATLED_LEN      6
  59          #define  PWRLED_LEN      6
  60          
  61          //const WORD code BattLEDPattern[]= 
  62          //{
  63          //      //-------------------------------------------------------------
  64          //      //      BAT_FUL BAT_CHG BAT_DSG BAT_OUT BAT_LOW BAT_FAIL     
  65          //      //-------------------------------------------------------------
  66          //              0x0000, 0x5555, 0x0000, 0x0000, 0x0000, 0x0000,         // Battery LED1 
  67          //              0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,         // Battery LED2 
  68          //};
  69          
  70          const WORD code PowerLEDPattern[]= 
  71          {
  72                  //--------------------------------------------------------------------------
  73                  //      S0      S3      S4      S5      index4  index5                                           
  74                  //--------------------------------------------------------------------------
  75                          0xFFFF, 0x5555, 0x4444, 0x0000, 0x0000, 0x0000,         //      Power LED1
  76                  0x0000, 0x5555, 0x4444, 0x0000, 0x0000, 0x0000,         //      Power LED2
  77          };
  78          
  79          //----------------------------------------------------------------------------
  80          // Turn on/off LEDs according to machine status.
  81          // Executed once per 1 sec
  82          // for example:
  83          //               ->BIT14        
  84          //              1010101010101010
  85          //              0101010101010101
  86          //                                <-BIT3                                
  87          //----------------------------------------------------------------------------
  88          void ProcessLED(void) 
  89          {
  90   1              BYTE bat_index, pwr_index;   
  91   1          
  92   1              LED_FLASH_CNT <<= 1;
  93   1              if(LED_FLASH_CNT == 0)  LED_FLASH_CNT=0x0001;
  94   1      
  95   1          /* Power LED control method */
  96   1          pwr_index=0;                // pre-set S0                  
  97   1          
  98   1              if(SystemIsS5)              // pre-set S5    
  99   1              {
 100   2                      pwr_index=3;
 101   2              }
 102   1              if(SystemIsS4)              // pre-set S4   
 103   1              {
 104   2                      pwr_index=2;
 105   2              }
 106   1              if(SystemIsS3)              // pre-set S3    
 107   1              {
 108   2                      pwr_index=1;
 109   2              }
 110   1      
 111   1              if(PowerLEDPattern[pwr_index] & LED_FLASH_CNT)  // setup power LED
 112   1              {       
 113   2                      PWRLED1_ON();
 114   2              } 
 115   1              else 
 116   1              {       
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 3   

 117   2                      PWRLED1_OFF();
 118   2              }
 119   1      //      if(PowerLEDPattern[PWRLED_LEN+pwr_index] & LED_FLASH_CNT) 
 120   1      //      {
 121   1      //          PWRLED2_ON();        
 122   1      //      } 
 123   1      //      else 
 124   1      //      {
 125   1      //          PWRLED2_OFF();       
 126   1      //      }
 127   1          
 128   1      #if 0
                  /* Battery LED control method */
                  bat_index = 0x03;           // pre-set battery out 
              
              
                      if(BattLEDPattern[bat_index] & LED_FLASH_CNT) 
                      {               
                              BATLED1_ON();
                      } 
                      else 
                      {               
                              BATLED1_OFF();
                      }
                      
                      if(BattLEDPattern[BATLED_LEN+bat_index] & LED_FLASH_CNT)         
                      {               
                              BATLED2_ON();
                      } 
                      else 
                      {               
                              BATLED2_OFF();
                      }
              #endif
 151   1      }
 152          
 153          //----------------------------------------------------------------------------
 154          // The function of turning on all LED           
 155          //----------------------------------------------------------------------------
 156          void TurnOnAllLED(void)
 157          {
 158   1              PWRLED1_ON();
 159   1      //      BATLED1_ON();
 160   1      //      BATLED2_ON();
 161   1      //    NUMLED_ON();
 162   1      //    CAPLED_ON();
 163   1      }
 164          
 165          //----------------------------------------------------------------------------
 166          // The function of turning off all LED          
 167          //----------------------------------------------------------------------------
 168          void TurnOffAllLED(void)
 169          {
 170   1              PWRLED1_OFF();
 171   1      //      BATLED1_OFF();
 172   1      //      BATLED2_OFF();
 173   1      //    NUMLED_OFF();
 174   1      //    CAPLED_OFF();
 175   1      }
 176          //----------------------------------------------------------------------------
 177          // The function of debuging LED                 
 178          //----------------------------------------------------------------------------
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 4   

 179          void DebugLED(void) 
 180          {
 181   1      
 182   1      }
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _OEM_Write_Leds (BEGIN)
                                           ; SOURCE LINE # 33
0000 900000      R     MOV     DPTR,#data_byte
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 34
                                           ; SOURCE LINE # 35
0005 E0                MOVX    A,@DPTR
0006 FF                MOV     R7,A
0007 F500        E     MOV     Led_Data,A
                                           ; SOURCE LINE # 36
0009 EF                MOV     A,R7
000A 30E105            JNB     ACC.1,?C0001
                                           ; SOURCE LINE # 37
                                           ; SOURCE LINE # 38
000D 120000      E     LCALL   Hook_NUMLED_ON
                                           ; SOURCE LINE # 39
0010 8003              SJMP    ?C0002
0012         ?C0001:
                                           ; SOURCE LINE # 41
                                           ; SOURCE LINE # 42
0012 120000      E     LCALL   Hook_NUMLED_OFF
                                           ; SOURCE LINE # 43
0015         ?C0002:
                                           ; SOURCE LINE # 45
0015 900000      R     MOV     DPTR,#data_byte
0018 E0                MOVX    A,@DPTR
0019 30E203            JNB     ACC.2,?C0003
                                           ; SOURCE LINE # 46
                                           ; SOURCE LINE # 47
001C 020000      E     LJMP    Hook_CAPLED_ON
                                           ; SOURCE LINE # 48
001F         ?C0003:
                                           ; SOURCE LINE # 50
                                           ; SOURCE LINE # 51
001F 120000      E     LCALL   Hook_CAPLED_OFF
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0022         ?C0005:
0022 22                RET     
             ; FUNCTION _OEM_Write_Leds (END)

             ; FUNCTION ProcessLED (BEGIN)
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 92
0000 900000      E     MOV     DPTR,#LED_FLASH_CNT+01H
0003 E0                MOVX    A,@DPTR
0004 25E0              ADD     A,ACC
0006 F0                MOVX    @DPTR,A
0007 900000      E     MOV     DPTR,#LED_FLASH_CNT
000A E0                MOVX    A,@DPTR
000B 33                RLC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 93
000D E0                MOVX    A,@DPTR
000E 7002              JNZ     ?C0016
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 6   

0012         ?C0016:
0012 7007              JNZ     ?C0006
0014 900000      E     MOV     DPTR,#LED_FLASH_CNT
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 04                INC     A
001A F0                MOVX    @DPTR,A
001B         ?C0006:
                                           ; SOURCE LINE # 96
;---- Variable 'pwr_index' assigned to Register 'R7' ----
001B E4                CLR     A
001C FF                MOV     R7,A
                                           ; SOURCE LINE # 98
001D 900000      E     MOV     DPTR,#SysPowState
0020 E0                MOVX    A,@DPTR
0021 B45502            CJNE    A,#055H,?C0007
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 100
0024 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 101
0026         ?C0007:
                                           ; SOURCE LINE # 102
0026 900000      E     MOV     DPTR,#SysPowState
0029 E0                MOVX    A,@DPTR
002A B44402            CJNE    A,#044H,?C0008
                                           ; SOURCE LINE # 103
                                           ; SOURCE LINE # 104
002D 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 105
002F         ?C0008:
                                           ; SOURCE LINE # 106
002F 900000      E     MOV     DPTR,#SysPowState
0032 E0                MOVX    A,@DPTR
0033 B43302            CJNE    A,#033H,?C0009
                                           ; SOURCE LINE # 107
                                           ; SOURCE LINE # 108
0036 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 109
0038         ?C0009:
                                           ; SOURCE LINE # 111
0038 EF                MOV     A,R7
0039 25E0              ADD     A,ACC
003B 2400        R     ADD     A,#LOW PowerLEDPattern
003D F582              MOV     DPL,A
003F E4                CLR     A
0040 3400        R     ADDC    A,#HIGH PowerLEDPattern
0042 F583              MOV     DPH,A
0044 E4                CLR     A
0045 93                MOVC    A,@A+DPTR
0046 FE                MOV     R6,A
0047 7401              MOV     A,#01H
0049 93                MOVC    A,@A+DPTR
004A FF                MOV     R7,A
004B 900000      E     MOV     DPTR,#LED_FLASH_CNT
004E E0                MOVX    A,@DPTR
004F FC                MOV     R4,A
0050 A3                INC     DPTR
0051 E0                MOVX    A,@DPTR
0052 FD                MOV     R5,A
0053 EE                MOV     A,R6
0054 5C                ANL     A,R4
0055 FE                MOV     R6,A
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 7   

0056 EF                MOV     A,R7
0057 5D                ANL     A,R5
0058 4E                ORL     A,R6
0059 900000      E     MOV     DPTR,#GPDRD
005C 6005              JZ      ?C0010
                                           ; SOURCE LINE # 112
                                           ; SOURCE LINE # 113
005E E0                MOVX    A,@DPTR
005F 54FE              ANL     A,#0FEH
0061 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 114
0062 22                RET     
0063         ?C0010:
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
0063 E0                MOVX    A,@DPTR
0064 4401              ORL     A,#01H
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 151
0067         ?C0012:
0067 22                RET     
             ; FUNCTION ProcessLED (END)

             ; FUNCTION TurnOnAllLED (BEGIN)
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
0000 900000      E     MOV     DPTR,#GPDRD
0003 E0                MOVX    A,@DPTR
0004 54FE              ANL     A,#0FEH
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
0007 22                RET     
             ; FUNCTION TurnOnAllLED (END)

             ; FUNCTION TurnOffAllLED (BEGIN)
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 170
0000 900000      E     MOV     DPTR,#GPDRD
0003 E0                MOVX    A,@DPTR
0004 4401              ORL     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
0007 22                RET     
             ; FUNCTION TurnOffAllLED (END)

             ; FUNCTION DebugLED (BEGIN)
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 182
0000 22                RET     
             ; FUNCTION DebugLED (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.03   OEM_LED                                                               02/02/2015 14:30:20 PAGE 8   

   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
